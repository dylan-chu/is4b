// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/facilities.proto

/*
Package facilities is a generated protocol buffer package.

It is generated from these files:
	proto/facilities.proto

It has these top-level messages:
	Building
	AddBuidingEvent
	ListBuildingsEvent
	MeetingRoom
	AddMeetingRoomEvent
	ListMeetingRoomsEvent
	ConfirmationEvent
*/
package facilities

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Building struct {
	Id   int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Building) Reset()                    { *m = Building{} }
func (m *Building) String() string            { return proto.CompactTextString(m) }
func (*Building) ProtoMessage()               {}
func (*Building) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Building) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Building) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AddBuidingEvent struct {
	UserId       int32  `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	BuildingName string `protobuf:"bytes,2,opt,name=buildingName" json:"buildingName,omitempty"`
}

func (m *AddBuidingEvent) Reset()                    { *m = AddBuidingEvent{} }
func (m *AddBuidingEvent) String() string            { return proto.CompactTextString(m) }
func (*AddBuidingEvent) ProtoMessage()               {}
func (*AddBuidingEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AddBuidingEvent) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *AddBuidingEvent) GetBuildingName() string {
	if m != nil {
		return m.BuildingName
	}
	return ""
}

type ListBuildingsEvent struct {
	UserId int32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
}

func (m *ListBuildingsEvent) Reset()                    { *m = ListBuildingsEvent{} }
func (m *ListBuildingsEvent) String() string            { return proto.CompactTextString(m) }
func (*ListBuildingsEvent) ProtoMessage()               {}
func (*ListBuildingsEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListBuildingsEvent) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type MeetingRoom struct {
	Id                int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	BuildingId        int32  `protobuf:"varint,2,opt,name=buildingId" json:"buildingId,omitempty"`
	Floor             int32  `protobuf:"varint,3,opt,name=floor" json:"floor,omitempty"`
	Name              string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Capacity          int32  `protobuf:"varint,5,opt,name=capacity" json:"capacity,omitempty"`
	HasProjector      bool   `protobuf:"varint,6,opt,name=hasProjector" json:"hasProjector,omitempty"`
	HasWhiteboard     bool   `protobuf:"varint,7,opt,name=hasWhiteboard" json:"hasWhiteboard,omitempty"`
	HasConferenceLine bool   `protobuf:"varint,8,opt,name=hasConferenceLine" json:"hasConferenceLine,omitempty"`
}

func (m *MeetingRoom) Reset()                    { *m = MeetingRoom{} }
func (m *MeetingRoom) String() string            { return proto.CompactTextString(m) }
func (*MeetingRoom) ProtoMessage()               {}
func (*MeetingRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MeetingRoom) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MeetingRoom) GetBuildingId() int32 {
	if m != nil {
		return m.BuildingId
	}
	return 0
}

func (m *MeetingRoom) GetFloor() int32 {
	if m != nil {
		return m.Floor
	}
	return 0
}

func (m *MeetingRoom) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MeetingRoom) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *MeetingRoom) GetHasProjector() bool {
	if m != nil {
		return m.HasProjector
	}
	return false
}

func (m *MeetingRoom) GetHasWhiteboard() bool {
	if m != nil {
		return m.HasWhiteboard
	}
	return false
}

func (m *MeetingRoom) GetHasConferenceLine() bool {
	if m != nil {
		return m.HasConferenceLine
	}
	return false
}

type AddMeetingRoomEvent struct {
	UserId      int32        `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	MeetingRoom *MeetingRoom `protobuf:"bytes,2,opt,name=meetingRoom" json:"meetingRoom,omitempty"`
}

func (m *AddMeetingRoomEvent) Reset()                    { *m = AddMeetingRoomEvent{} }
func (m *AddMeetingRoomEvent) String() string            { return proto.CompactTextString(m) }
func (*AddMeetingRoomEvent) ProtoMessage()               {}
func (*AddMeetingRoomEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AddMeetingRoomEvent) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *AddMeetingRoomEvent) GetMeetingRoom() *MeetingRoom {
	if m != nil {
		return m.MeetingRoom
	}
	return nil
}

type ListMeetingRoomsEvent struct {
	UserId     int32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	BuildingId int32 `protobuf:"varint,2,opt,name=buildingId" json:"buildingId,omitempty"`
	Floor      int32 `protobuf:"varint,3,opt,name=floor" json:"floor,omitempty"`
}

func (m *ListMeetingRoomsEvent) Reset()                    { *m = ListMeetingRoomsEvent{} }
func (m *ListMeetingRoomsEvent) String() string            { return proto.CompactTextString(m) }
func (*ListMeetingRoomsEvent) ProtoMessage()               {}
func (*ListMeetingRoomsEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ListMeetingRoomsEvent) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ListMeetingRoomsEvent) GetBuildingId() int32 {
	if m != nil {
		return m.BuildingId
	}
	return 0
}

func (m *ListMeetingRoomsEvent) GetFloor() int32 {
	if m != nil {
		return m.Floor
	}
	return 0
}

type ConfirmationEvent struct {
	ReturnCode    int32  `protobuf:"varint,1,opt,name=returnCode" json:"returnCode,omitempty"`
	StatusMessage string `protobuf:"bytes,2,opt,name=statusMessage" json:"statusMessage,omitempty"`
}

func (m *ConfirmationEvent) Reset()                    { *m = ConfirmationEvent{} }
func (m *ConfirmationEvent) String() string            { return proto.CompactTextString(m) }
func (*ConfirmationEvent) ProtoMessage()               {}
func (*ConfirmationEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ConfirmationEvent) GetReturnCode() int32 {
	if m != nil {
		return m.ReturnCode
	}
	return 0
}

func (m *ConfirmationEvent) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*Building)(nil), "facilities.Building")
	proto.RegisterType((*AddBuidingEvent)(nil), "facilities.AddBuidingEvent")
	proto.RegisterType((*ListBuildingsEvent)(nil), "facilities.ListBuildingsEvent")
	proto.RegisterType((*MeetingRoom)(nil), "facilities.MeetingRoom")
	proto.RegisterType((*AddMeetingRoomEvent)(nil), "facilities.AddMeetingRoomEvent")
	proto.RegisterType((*ListMeetingRoomsEvent)(nil), "facilities.ListMeetingRoomsEvent")
	proto.RegisterType((*ConfirmationEvent)(nil), "facilities.ConfirmationEvent")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for FacilitiesAdmin service

type FacilitiesAdminClient interface {
	AddBuilding(ctx context.Context, in *AddBuidingEvent, opts ...grpc.CallOption) (*ConfirmationEvent, error)
	ListBuildings(ctx context.Context, in *ListBuildingsEvent, opts ...grpc.CallOption) (FacilitiesAdmin_ListBuildingsClient, error)
	AddMeetingRoom(ctx context.Context, in *AddMeetingRoomEvent, opts ...grpc.CallOption) (*ConfirmationEvent, error)
	ListMeetingRooms(ctx context.Context, in *ListMeetingRoomsEvent, opts ...grpc.CallOption) (FacilitiesAdmin_ListMeetingRoomsClient, error)
}

type facilitiesAdminClient struct {
	cc *grpc.ClientConn
}

func NewFacilitiesAdminClient(cc *grpc.ClientConn) FacilitiesAdminClient {
	return &facilitiesAdminClient{cc}
}

func (c *facilitiesAdminClient) AddBuilding(ctx context.Context, in *AddBuidingEvent, opts ...grpc.CallOption) (*ConfirmationEvent, error) {
	out := new(ConfirmationEvent)
	err := grpc.Invoke(ctx, "/facilities.FacilitiesAdmin/addBuilding", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *facilitiesAdminClient) ListBuildings(ctx context.Context, in *ListBuildingsEvent, opts ...grpc.CallOption) (FacilitiesAdmin_ListBuildingsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_FacilitiesAdmin_serviceDesc.Streams[0], c.cc, "/facilities.FacilitiesAdmin/listBuildings", opts...)
	if err != nil {
		return nil, err
	}
	x := &facilitiesAdminListBuildingsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FacilitiesAdmin_ListBuildingsClient interface {
	Recv() (*Building, error)
	grpc.ClientStream
}

type facilitiesAdminListBuildingsClient struct {
	grpc.ClientStream
}

func (x *facilitiesAdminListBuildingsClient) Recv() (*Building, error) {
	m := new(Building)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *facilitiesAdminClient) AddMeetingRoom(ctx context.Context, in *AddMeetingRoomEvent, opts ...grpc.CallOption) (*ConfirmationEvent, error) {
	out := new(ConfirmationEvent)
	err := grpc.Invoke(ctx, "/facilities.FacilitiesAdmin/addMeetingRoom", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *facilitiesAdminClient) ListMeetingRooms(ctx context.Context, in *ListMeetingRoomsEvent, opts ...grpc.CallOption) (FacilitiesAdmin_ListMeetingRoomsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_FacilitiesAdmin_serviceDesc.Streams[1], c.cc, "/facilities.FacilitiesAdmin/listMeetingRooms", opts...)
	if err != nil {
		return nil, err
	}
	x := &facilitiesAdminListMeetingRoomsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FacilitiesAdmin_ListMeetingRoomsClient interface {
	Recv() (*MeetingRoom, error)
	grpc.ClientStream
}

type facilitiesAdminListMeetingRoomsClient struct {
	grpc.ClientStream
}

func (x *facilitiesAdminListMeetingRoomsClient) Recv() (*MeetingRoom, error) {
	m := new(MeetingRoom)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for FacilitiesAdmin service

type FacilitiesAdminServer interface {
	AddBuilding(context.Context, *AddBuidingEvent) (*ConfirmationEvent, error)
	ListBuildings(*ListBuildingsEvent, FacilitiesAdmin_ListBuildingsServer) error
	AddMeetingRoom(context.Context, *AddMeetingRoomEvent) (*ConfirmationEvent, error)
	ListMeetingRooms(*ListMeetingRoomsEvent, FacilitiesAdmin_ListMeetingRoomsServer) error
}

func RegisterFacilitiesAdminServer(s *grpc.Server, srv FacilitiesAdminServer) {
	s.RegisterService(&_FacilitiesAdmin_serviceDesc, srv)
}

func _FacilitiesAdmin_AddBuilding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddBuidingEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FacilitiesAdminServer).AddBuilding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/facilities.FacilitiesAdmin/AddBuilding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FacilitiesAdminServer).AddBuilding(ctx, req.(*AddBuidingEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _FacilitiesAdmin_ListBuildings_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListBuildingsEvent)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FacilitiesAdminServer).ListBuildings(m, &facilitiesAdminListBuildingsServer{stream})
}

type FacilitiesAdmin_ListBuildingsServer interface {
	Send(*Building) error
	grpc.ServerStream
}

type facilitiesAdminListBuildingsServer struct {
	grpc.ServerStream
}

func (x *facilitiesAdminListBuildingsServer) Send(m *Building) error {
	return x.ServerStream.SendMsg(m)
}

func _FacilitiesAdmin_AddMeetingRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddMeetingRoomEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FacilitiesAdminServer).AddMeetingRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/facilities.FacilitiesAdmin/AddMeetingRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FacilitiesAdminServer).AddMeetingRoom(ctx, req.(*AddMeetingRoomEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _FacilitiesAdmin_ListMeetingRooms_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListMeetingRoomsEvent)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FacilitiesAdminServer).ListMeetingRooms(m, &facilitiesAdminListMeetingRoomsServer{stream})
}

type FacilitiesAdmin_ListMeetingRoomsServer interface {
	Send(*MeetingRoom) error
	grpc.ServerStream
}

type facilitiesAdminListMeetingRoomsServer struct {
	grpc.ServerStream
}

func (x *facilitiesAdminListMeetingRoomsServer) Send(m *MeetingRoom) error {
	return x.ServerStream.SendMsg(m)
}

var _FacilitiesAdmin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "facilities.FacilitiesAdmin",
	HandlerType: (*FacilitiesAdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "addBuilding",
			Handler:    _FacilitiesAdmin_AddBuilding_Handler,
		},
		{
			MethodName: "addMeetingRoom",
			Handler:    _FacilitiesAdmin_AddMeetingRoom_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "listBuildings",
			Handler:       _FacilitiesAdmin_ListBuildings_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "listMeetingRooms",
			Handler:       _FacilitiesAdmin_ListMeetingRooms_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/facilities.proto",
}

func init() { proto.RegisterFile("proto/facilities.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 475 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0x5e, 0xca, 0x3a, 0xca, 0x2b, 0x5b, 0x99, 0x19, 0x23, 0x2a, 0xa2, 0x14, 0x6b, 0x87, 0x1e,
	0xa6, 0x82, 0x06, 0x17, 0x8e, 0xed, 0x04, 0x52, 0xc5, 0x8a, 0xaa, 0x5c, 0x10, 0x47, 0x37, 0x76,
	0x9b, 0x87, 0x12, 0x7b, 0xb2, 0x1d, 0x24, 0x7e, 0x26, 0xbf, 0x87, 0x0b, 0x8a, 0xdb, 0xb4, 0x4e,
	0x22, 0x8a, 0xc4, 0x2d, 0xfe, 0xde, 0xf3, 0xf3, 0xf7, 0xbe, 0xef, 0x53, 0xe0, 0xf2, 0x5e, 0x2b,
	0xab, 0xde, 0xac, 0x58, 0x8c, 0x29, 0x5a, 0x14, 0x66, 0xec, 0x00, 0x02, 0x7b, 0x84, 0x8e, 0xa1,
	0x33, 0xcd, 0x31, 0xe5, 0x28, 0xd7, 0xe4, 0x0c, 0x5a, 0xc8, 0xc3, 0x60, 0x18, 0x8c, 0xda, 0x51,
	0x0b, 0x39, 0x21, 0x70, 0x2c, 0x59, 0x26, 0xc2, 0xd6, 0x30, 0x18, 0x3d, 0x8a, 0xdc, 0x37, 0x9d,
	0x43, 0x6f, 0xc2, 0xf9, 0x34, 0xc7, 0xe2, 0xc6, 0xc7, 0x1f, 0x42, 0x5a, 0x72, 0x09, 0x27, 0xb9,
	0x11, 0x7a, 0x56, 0x5e, 0xdd, 0x9e, 0x08, 0x85, 0xc7, 0xcb, 0xed, 0xe8, 0x2f, 0xfb, 0x31, 0x15,
	0x8c, 0x5e, 0x03, 0xb9, 0x43, 0x63, 0x4b, 0x0a, 0xe6, 0xe0, 0x44, 0xfa, 0x3b, 0x80, 0xee, 0x5c,
	0x08, 0x8b, 0x72, 0x1d, 0x29, 0x95, 0x35, 0x08, 0x0f, 0x00, 0xca, 0xe9, 0x33, 0xee, 0xde, 0x6b,
	0x47, 0x1e, 0x42, 0x2e, 0xa0, 0xbd, 0x4a, 0x95, 0xd2, 0xe1, 0x03, 0x57, 0xda, 0x1c, 0x76, 0x6b,
	0x1e, 0xef, 0xd7, 0x24, 0x7d, 0xe8, 0xc4, 0xec, 0x9e, 0xc5, 0x68, 0x7f, 0x86, 0x6d, 0xd7, 0xbc,
	0x3b, 0x17, 0x7b, 0x25, 0xcc, 0x2c, 0xb4, 0xfa, 0x2e, 0x62, 0xab, 0x74, 0x78, 0x32, 0x0c, 0x46,
	0x9d, 0xa8, 0x82, 0x91, 0x2b, 0x38, 0x4d, 0x98, 0xf9, 0x9a, 0xa0, 0x15, 0x4b, 0xc5, 0x34, 0x0f,
	0x1f, 0xba, 0xa6, 0x2a, 0x48, 0xae, 0xe1, 0x3c, 0x61, 0xe6, 0x56, 0xc9, 0x95, 0xd0, 0x42, 0xc6,
	0xe2, 0x0e, 0xa5, 0x08, 0x3b, 0xae, 0xb3, 0x59, 0xa0, 0x09, 0x3c, 0x9d, 0x70, 0xee, 0xed, 0x7f,
	0x58, 0xfe, 0x0f, 0xd0, 0xcd, 0xf6, 0xbd, 0x4e, 0x8d, 0xee, 0xcd, 0xf3, 0xb1, 0x97, 0x06, 0x6f,
	0x54, 0xe4, 0xf7, 0x52, 0x01, 0xcf, 0x0a, 0x57, 0xbc, 0xfa, 0x61, 0x63, 0xfe, 0x4f, 0x78, 0xfa,
	0x0d, 0xce, 0x8b, 0x15, 0x51, 0x67, 0xcc, 0xa2, 0x92, 0x9b, 0x27, 0x06, 0x00, 0x5a, 0xd8, 0x5c,
	0xcb, 0x5b, 0xc5, 0xc5, 0xf6, 0x19, 0x0f, 0x29, 0x94, 0x35, 0x96, 0xd9, 0xdc, 0xcc, 0x85, 0x31,
	0x6c, 0x5d, 0xc6, 0xaa, 0x0a, 0xde, 0xfc, 0x6a, 0x41, 0xef, 0xd3, 0x6e, 0xd3, 0x09, 0xcf, 0x50,
	0x92, 0xcf, 0xd0, 0x65, 0x2e, 0xba, 0x9b, 0xb4, 0xbf, 0xf0, 0xa5, 0xa8, 0x65, 0xba, 0xff, 0xd2,
	0x2f, 0x36, 0x48, 0xd2, 0x23, 0x32, 0x83, 0xd3, 0xd4, 0x0f, 0x2e, 0x19, 0xf8, 0x37, 0x9a, 0x99,
	0xee, 0x5f, 0xf8, 0xf5, 0xb2, 0x46, 0x8f, 0xde, 0x06, 0x24, 0x82, 0x33, 0x56, 0xf1, 0x95, 0xbc,
	0xaa, 0x51, 0xab, 0x7b, 0xfe, 0x6f, 0x7a, 0x11, 0x3c, 0x49, 0x6b, 0x0e, 0x92, 0xd7, 0x75, 0x86,
	0x0d, 0x7f, 0xfb, 0x7f, 0x8b, 0x47, 0xc1, 0x73, 0x7a, 0x05, 0x3d, 0x34, 0xef, 0x97, 0x5e, 0xcb,
	0xd4, 0xd3, 0x78, 0x51, 0xfc, 0x5a, 0x16, 0xc1, 0xf2, 0xc4, 0xfd, 0x63, 0xde, 0xfd, 0x09, 0x00,
	0x00, 0xff, 0xff, 0xb5, 0x78, 0xb2, 0xc7, 0x7d, 0x04, 0x00, 0x00,
}
